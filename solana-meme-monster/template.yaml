AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  solana-meme-monster

  Sample SAM Template for solana-meme-monster

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  TokenCountsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: tokenCounts/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
      - x86_64
      Events:
        GetTwitterCounts:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getTokenCounts
            Method: get
            Auth:
              ApiKeyRequired: true
              UsagePlan:
                CreateUsagePlan: PER_API
                UsagePlanName: MemeMonsterUsagePlan
                
                
  CrawlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Policies:
      # Give the Lambda service access to poll your SSM service
      - AmazonSSMReadOnlyAccess
      CodeUri: crawler/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
      - x86_64


  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GetCountsApi:
    Description: API Gateway endpoint URL for Prod stage for tokenCounts function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/getTokenCounts/"
  TokenCountsFunction:
    Description: Get TokenCounts Lambda Function ARN
    Value: !GetAtt TokenCountsFunction.Arn
  TokenCountsFunctionIamRole:
    Description: Implicit IAM Role created for tokenCounts function
    Value: !GetAtt TokenCountsFunctionRole.Arn
  CrawlerFunction:
    Description: Get CrawlerFunction Lambda Function ARN
    Value: !GetAtt CrawlerFunction.Arn
  CrawlerFunctionIamRole:
    Description: Implicit IAM Role created for crawler function
    Value: !GetAtt CrawlerFunctionRole.Arn
